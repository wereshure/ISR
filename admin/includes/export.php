<?php
ob_start(); // Start output buffering

require('libraries/tcpdf/tcpdf.php'); // Adjust the path to your TCPDF library

function exportReport($data, $exportType, $reportType) {
    if ($exportType === 'pdf') {
        exportToPDF($data, $reportType);
    } elseif ($exportType === 'excel') {
        exportToExcel($data, $reportType);
    } else {
        die("Invalid export type specified!");
    }
}

function exportToPDF($data, $title) {
    // Create new TCPDF instance
    $pdf = new TCPDF();

    // Set document information
    $pdf->SetCreator('ISR System');
    $pdf->SetAuthor('ISR Admin');
    $pdf->SetTitle($title);
    $pdf->SetSubject('Report Export');
    $pdf->SetKeywords('ISR, PDF, report');

    // Set default header and footer
    $pdf->SetHeaderData('', 0, $title, 'Generated by ISR');
    $pdf->setFooterData(array(0, 64, 0), array(0, 64, 128));

    // Set default font
    $pdf->SetFont('helvetica', '', 12);

    // Add a page
    $pdf->AddPage();

    // Add Title
    $pdf->SetFont('helvetica', 'B', 16);
    $pdf->Cell(0, 10, $title, 0, 1, 'C');
    $pdf->Ln(10); // Line break

    // Add table headers if data is provided
    if (!empty($data)) {
        $headers = array_keys($data[0]);

        // Add table header row
        $pdf->SetFont('helvetica', 'B', 12);
        foreach ($headers as $header) {
            $pdf->Cell(45, 10, $header, 1, 0, 'C'); // Adjust width as needed
        }
        $pdf->Ln();

        // Add data rows
        $pdf->SetFont('helvetica', '', 12);
        foreach ($data as $row) {
            foreach ($row as $value) {
                $pdf->Cell(45, 10, $value, 1, 0, 'C'); // Adjust width as needed
            }
            $pdf->Ln();
        }
    } else {
        $pdf->Cell(0, 10, 'No data available.', 0, 1, 'C');
    }

    // Clear previous outputs and set the header for PDF
    ob_clean();
    header('Content-Type: application/pdf');
    header('Content-Disposition: attachment; filename="report.pdf"');

    // Output the PDF and stop further script execution
    $pdf->Output('report.pdf', 'D');
    exit();
}

function exportToExcel($data, $reportType) {
    $phpspreadsheetPath = 'libraries/PhpSpreadsheet/vendor/autoload.php'; // Adjusted relative path
    if (!file_exists($phpspreadsheetPath)) {
        die("PhpSpreadsheet library is missing. Please check the path: $phpspreadsheetPath");
    }
    require_once($phpspreadsheetPath);

    $spreadsheet = new \PhpOffice\PhpSpreadsheet\Spreadsheet();
    $sheet = $spreadsheet->getActiveSheet();

    // Add Report Header
    $sheet->setCellValue('A1', strtoupper($reportType) . " REPORT");

    // Add table headers
    if (!empty($data)) {
        $headers = array_keys($data[0]);
        $col = 'A';
        foreach ($headers as $header) {
            $sheet->setCellValue($col . '2', $header);
            $col++;
        }

        // Add table rows
        $rowNum = 3;
        foreach ($data as $row) {
            $col = 'A';
            foreach ($row as $value) {
                $sheet->setCellValue($col . $rowNum, $value);
                $col++;
            }
            $rowNum++;
        }
    } else {
        $sheet->setCellValue('A2', 'No data available.');
    }

    // Output Excel file
    $writer = new \PhpOffice\PhpSpreadsheet\Writer\Xlsx($spreadsheet);
    $filename = $reportType . "_Report.xlsx";

    header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
    header('Content-Disposition: attachment;filename="' . $filename . '"');
    header('Cache-Control: max-age=0');

    $writer->save('php://output');
    exit();
}
?>
